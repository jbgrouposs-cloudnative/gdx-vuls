version: 2

jobs:
  get_cve:
    machine: true
    steps:
      - restore_cache:
          keys:
            - cve-{{ .Branch }}
          paths:
            - /tmp/cve.sqlite3
      - run:
          name: fetch NVD
          command: |
            for i in `seq 2017 $(date +"%Y")`; do docker run --rm -it -v /tmp:/vuls vuls/go-cve-dictionary fetchnvd -years $i; done
      - run:
          name: fetch CVE
          command: |
            for i in `seq 2017 $(date +"%Y")`; do docker run --rm -it -v /tmp:/vuls vuls/go-cve-dictionary fetchjvn -years $i; done
      - save_cache:
          key: cve-{{ .Branch }}
          paths:
            - /tmp/cve.sqlite3
          force: yes
      - persist_to_workspace:
          root: /tmp
          paths:
            - cve.sqlite3
  get_oval:
    machine: true
    steps:
      - restore_cache:
          keys:
            - oval-{{ .Branch }}
          paths:
            - /tmp/oval.sqlite3
      - run:
          name: fetch oval
          command: docker run --rm -it -v /tmp:/vuls vuls/goval-dictionary fetch-alpine 3.3 3.4 3.5 3.6 3.7
      - save_cache:
          key: oval-{{ .Branch }}
          paths:
            - /tmp/oval.sqlite3
          force: yes
      - persist_to_workspace:
          root: /tmp
          paths:
            - oval.sqlite3
  scan:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: /tmp
      - add_ssh_keys:
          fingerprints:
            - "f3:3c:85:ae:ee:a7:96:5e:17:c7:83:23:ca:de:da:f1"
      - run:
          name: run container
          command: docker run -d openjdk:8-jdk-alpine
      - run:
          name: IPADDRESS settings
          command: |
            IPADDR=$(docker run --rm -it openjdk:8-jdk-alpine cat /etc/hosts | awk 'END{print $1}' | sed -e 's/[0-9]+$/1/g')
            sed -i -e "s/localhost/${IPADDR}/g" ./config.toml
      - run:
          name: check config
          command: cat ./config.toml  
      - run:
          name: config test
          command: |
            docker run --rm -it -v ~/.ssh:/root/.ssh:ro -v $(pwd)/config.toml:/vuls/config.toml -v /tmp:/tmp vuls/vuls configtest -config=/vuls/config.toml -containers-only
      - run:
          name: scan
          command: |
            docker run --rm -it -v ~/.ssh:/root/.ssh:ro -v $PWD/config.toml:/vuls/config.toml -v /tmp:/tmp -v /etc/localtime:/etc/localtime:ro -e "TZ=Asia/Tokyo" vuls/vuls scan -config=/vuls/config.toml -containers-only
      - run:
          name: report
          command: |
            docker run --rm -it -v ~/.ssh:/root/.ssh:ro -v $PWD/config.toml:/vuls/config.toml -v /tmp:/tmp -v /etc/localtime:/etc/localtime:ro -e "TZ=Asia/Tokyo" vuls/vuls report -config=/vuls/config.toml
workflows:
  version: 2
  vuls:
    jobs:
      - get_cve
      - get_oval
      - scan:
          requires:
            - get_cve
            - get_oval